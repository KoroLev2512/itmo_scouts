version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 8080:3000
      - 9229:9229
    volumes:
      - ./frontend/node_modules:/usr/src/frontend/node_modules
      - ./frontend/.next:/usr/src/frontend/.next
      - ./frontend:/usr/src/frontend
    networks:
      - server-net

  postgres:
    container_name: user_db
    image: postgres
    env_file: .env
    ports:
      - "${POSTGRES_PORT}:5432"
    restart: always
    volumes:
      - ./volumes/postgres-data:/var/lib/postgresql/data
    networks:
      - server-net

  company_db:
    container_name: company_db
    image: postgres
    restart: always
    ports:
      - ${COMPANY_DB_PORT}:5432
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${COMPANY_DB_NAME}
    networks:
      - server-net

  company_service:
    container_name: company-service
    build:
      context: ./company-service
      dockerfile: Dockerfile
    command: bash -c "uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - 5001:8000
    depends_on:
      - company_db
    restart: always
    networks:
      - server-net

  student_db:
    container_name: student_db
    image: postgres
    restart: always
    ports:
      - ${STUDENT_DB_PORT}:5432
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${STUDENT_DB_NAME}
    networks:
      - server-net

  student-service:
    container_name: student-service
    build:
      context: ./student-service
      dockerfile: Dockerfile
    command: bash -c "uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - 5002:8000
    depends_on:
      - student_db
    restart: always
    networks:
      - server-net

networks:
  server-net:
    driver: bridge
